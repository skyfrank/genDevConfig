# Copy this file into your ../shinken/etc/packs/network/SnmpBooster/ directory

define service {
  name                    default-snmp-template
  check_command           check_snmp_booster!$_SERVICEDSTEMPLATE$!$_SERVICEINST$!$_SERVICETRIGGERGROUP
  _inst                   None
  _instname               None
  _mapping                None
  _triggergroup           None
  _timeout                3
  _maximisedatasource     ''
  _maximisedatasourcevalue ''
  max_check_attempts      2
  check_interval          1
  retry_interval          1
  register                0
}

define service {
  name                    default-snmp-template_timeout10
  check_command           check_snmp_booster!$_SERVICEDSTEMPLATE$!$_SERVICEINST$!$_SERVICETRIGGERGROUP
  _inst                   None
  _triggergroup           None
  _instname               None
  _mapping                None
  _timeout                10
  max_check_attempts      2
  check_interval          1
  retry_interval          1
  register                0
  _maximisedatasource     ''
  _maximisedatasourcevalue ''
}

define service {
  name                    default-snmp-template_5min
  check_command           check_snmp_booster!$_SERVICEDSTEMPLATE$!$_SERVICEINST$!$_SERVICETRIGGERGROUP
  _inst                   None
  _instname               None
  _mapping                None
  _triggergroup           None
  _timeout                5
  _maximisedatasource     ''
  _maximisedatasourcevalue ''
  max_check_attempts      2
  check_interval          5
  retry_interval          1
  register                0
}

define service {
  name                    default-snmp-template_30min
  check_command           check_snmp_booster!$_SERVICEDSTEMPLATE$!$_SERVICEINST$!$_SERVICETRIGGERGROUP
  _inst                   None
  _instname               None
  _mapping                None
  _triggergroup           None
  _timeout                20
  _maximisedatasource     ''
  _maximisedatasourcevalue ''
  max_check_attempts      1
  check_interval          30
  retry_interval          1
  register                0
}

define service {
# IBM IMM: 5 minutes
   name generic-imm-service
   use default-snmp-template
   max_check_attempts      1
   check_interval 5
   retry_interval 1
   _timeout             20
   register 0
}

define service {
# Sondes NTP: 5 minutes
   name         generic-spectracom-ntp-service
   use          default-snmp-template
   check_interval       5
   retry_interval       1
   max_check_attempts   1
   _timeout             15
   register             0
}

define service {
# Cisco Optical Power Sensor : 5 minutes
   name         generic-sensor-service
   use          default-snmp-template
   check_interval       5
   retry_interval       1
   max_check_attempts   1
   register             0
}

define service {
# Geist RSMini : 5 minutes
   name         generic-co-env-mdg-service
   use          default-snmp-template
   check_interval       5
   retry_interval       1
   max_check_attempts   1
   _timeout             20
   register             0
}

define host{
  name                    SnmpBooster-host-noping
  alias                   SnmpBooster-host noping template
  check_command           check_dummy!0
  max_check_attempts      3
  check_interval          5
  retry_interval          1
  hostgroup               +SNMP
  use                     generic-host
  register                0
  _SNMPCOMMUNITYREAD        $SNMPCOMMUNITYREAD$
  _SNMPVERSION             $SNMPVERSION$
  # Bulk is supported by all the equipements
  _USEBULK                1
  # set to 1 for the old RDLs located in stations
  _NOCONCURRENCY          0
  # Maximun number of OIDs per SNMP request
  # The default (64) works with everything except the old RDLs
  _MAXOIDREQUEST          16
  _maximisedatasource     ''
  _maximisedatasourcevalue ''
}


define host{
        name                    SnmpBooster-host
        alias                   SnmpBooster-Host template
        check_command		check_host_alive
        max_check_attempts      3
	check_interval          5
	retry_interval          1
	_SNMPCOMMUNITYREAD      $SNMPCOMMUNITYREAD$
	_SNMPVERSION            $SNMPVERSION$
	# Use SNMPv2c bulkget during initial indexing
	_USEBULK                1
	# Wait for device to have replied to first request before sending second request
	_NOCONCURRENCY          0
	# Number of maximum OIDs requested per device, default is 64
	_MAXOIDREQUEST          16
	use                     pack-generic-host
	register                0
}

define host{
        name                    SnmpBooster-host-MDG
        alias                   SnmpBooster-Host template
        check_command		check_host_alive
        max_check_attempts      1
	check_interval          5
	retry_interval          1
	_SNMPCOMMUNITYREAD      $SNMPCOMMUNITYREAD$
	_SNMPVERSION            $SNMPVERSION$
	# Use SNMPv2c bulkget during initial indexing
	_USEBULK                0
	# Wait for device to have replied to first request before sending second request
	_NOCONCURRENCY          1
	# Number of maximum OIDs requested per device, default is 64
	_MAXOIDREQUEST          8
	use                     pack-generic-host
	register                0
}


define command {
  command_name    check_snmp_booster
  command_line    check_snmp_booster -H $HOSTNAME$ -A $HOSTADDRESS$ -S '$SERVICEDESC$' -C $_HOSTSNMPCOMMUNITYREAD$ -V $_HOSTSNMPVERSION$ -t $ARG1$ -i $_SERVICEINST$ -n '$_SERVICEINSTNAME$' -T $_SERVICETRIGGERGROUP$ -N $_SERVICEMAPPING$ -s $_TIMEOUT$ -b $_HOSTUSEBULK$ -c $_HOSTNOCONCURRENCY$ -g $_HOSTMAXOIDREQUEST$
  module_type     snmp_booster ; This is required to tell the poller how to execute the check
}

define command {
  command_name    check_snmp_booster_bulk
  command_line    check_snmp_booster -H $HOSTNAME$ -A $HOSTADDRESS$ -S '$SERVICEDESC$' -C $_HOSTSNMPCOMMUNITYREAD$ -V $_HOSTSNMPVERSION$ -t $ARG1$ -i $_SERVICEINST$ -n '$_SERVICEINSTNAME$' -T $_SERVICETRIGGERGROUP$ -N $_SERVICEMAPPING$ -s $_TIMEOUT$ -d "$_SERVICEMAXIMISEDATASOURCE$" -v "$_SERVICEMAXIMISEDATASOURCEVALUE$" -b
  module_type     snmp_booster
}


# The SnmpBooster.ini contains the definitions for DSTEMPLATEs, instance MAPs and TRIGGERGROUPs
# -t DSTEMPLATE (must be a valid DSTEMPLATE)
# -i INSTANCE (could be a numeric instance, a map(function-name,inst_map_key)) or None
# -T TRIGGERGROUP (could be a TRIGGERGROUP or None)
